{"version":3,"sources":["nerve.svg","logo.svg","nerveBlack.png","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","src","nerveLogo","text","link","map","navItem","href","App","nerveStats","value","subtitle","icon","faLock","faDonate","faCoins","nerve","stat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,G,MCAA,IDAA,IAA0B,mCEA1B,MAA0B,uC,eC4B1BA,MAzBf,WAMI,OACI,sBAAKC,UAAU,2BAAf,UACI,qBAAKC,IAAKC,IACV,oBAAIF,UAAU,4BAAd,SAPW,CACf,CAACG,KAAK,YAAaC,KAAK,0BACxB,CAACD,KAAK,OAAQC,KAAK,2BAMCC,KAAI,SAACC,GAAD,OACZ,6BACI,mBAAGC,KAAMD,EAAQF,KAAMJ,UAAU,uBAAjC,SACKM,EAAQH,cAKzB,mBAAGI,KAAK,mBAAR,SACI,wBAAQP,UAAU,4BAAlB,8B,oBCqBDQ,MApCf,WAEE,IAAMC,EAAa,CACjB,CAACC,MAAO,QAASC,SAAU,qBAAsBC,KAAMC,KACvD,CAACH,MAAO,QAASC,SAAU,kBAAmBC,KAAME,KACpD,CAACJ,MAAO,QAASC,SAAU,eAAgBC,KAAMG,MAEnD,OACE,sBAAKf,UAAU,4BAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,+BAAf,UACE,gCACE,oBAAIA,UAAU,yBAAd,uDACA,mKACA,mBAAGO,KAAK,mBAAR,SAA2B,wBAAQP,UAAU,4BAAlB,8BAE7B,8BACE,qBAAKC,IAAKe,SAGd,oBAAIhB,UAAU,6BAAd,SACGS,EAAWJ,KAAI,SAACY,GAAD,OACd,+BACE,cAAC,IAAD,CAAiBL,KAAMK,EAAKL,KAAMZ,UAAU,0BAC5C,sBAAKA,UAAU,yBAAf,UACE,6BAAKiB,EAAKP,QACV,+BAAOO,EAAKN,0BCrBXO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bb054092.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/nerve.bd7ed955.svg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/nerveBlack.0ba5c4f4.png\";","import nerveLogo from './nerveBlack.png';\nimport './Nav.css';\n\nfunction Nav() {\n    //Options are hardcoded at the moment. In the future, there may be a real analytics page but we can also remove it\n    const navOptions = [\n        {text:'Analytics', link:\"https://docs.nerve.fi/\"}, \n        {text:'Docs', link:\"https://docs.nerve.fi/\"}\n    ];\n    return (\n        <nav className=\"nerve-app__nav-container\">\n            <img src={nerveLogo} />\n            <ul className=\"nerve-app__list-container\">\n                {navOptions.map((navItem) => \n                    <li>\n                        <a href={navItem.link} className=\"nerve-app__list-item\">\n                            {navItem.text}\n                        </a>\n                    </li>\n                )}\n            </ul>\n            <a href=\"https://nerve.fi\">\n                <button className=\"nerve-app__nav-launch-btn\">Launch App</button>\n            </a>\n        </nav>\n      );\n}\n\nexport default Nav;\n","import logo from './logo.svg';\nimport nerve from './nerve.svg';\nimport Nav from './Nav';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLock, faCoins, faDonate } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nfunction App() {\n  // Nerve stats. Subject to change and will be provided by the API in the future\n  const nerveStats = [\n    {value: '32.9M', subtitle: 'Total Value Locked', icon: faLock},\n    {value: '$0.60', subtitle: 'NRV Token Price', icon: faDonate},\n    {value: '13.2M', subtitle: 'Volume Daily', icon: faCoins}\n  ];\n  return (\n    <div className=\"nerve-app__main-container\">\n      <Nav />\n      <div className=\"nerve-app__content-container\">\n        <div>\n          <h1 className=\"nerve-app__main-header\">An AMM for stable coins and pegged assets</h1>\n          <h3>Launched on Binance Smart Chain, Nerve's first pool is a basket of dollar-pegged stablecoins consisting of BUSD, USDT, and USDC. </h3>\n          <a href=\"https://nerve.fi\"><button className=\"nerve-app__content-button\">Get Started</button></a>\n        </div>\n        <div>\n          <img src={nerve} />\n        </div>\n      </div>\n      <ul className=\"nerve-app__stats-container\">\n        {nerveStats.map((stat) =>\n          <li>\n            <FontAwesomeIcon icon={stat.icon} className=\"nerve-app__stats-icon\" />\n            <div className=\"nerve-app__stats-right\">\n              <h1>{stat.value}</h1>\n              <span>{stat.subtitle}</span>\n            </div>\n          </li>\n        )}\n      </ul>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}